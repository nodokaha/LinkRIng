# This file was generated by FigmaFlet by Benit Mulindwa
# https://github.com/Benitmulindwa/FigmaFlet

import flet as ft
from flet.security import encrypt, decrypt
import tweepy
import json
from datetime import datetime
import ctypes.wintypes
import os
from pythonosc import udp_client
from pythonosc.dispatcher import Dispatcher
from pythonosc import osc_server
from pathlib import Path
import webbrowser
import time
import secrets

# グローバル変数
at = "udUcuD2dicPTciDrjr5HgGHIO"
ats = "X5V8AukObOXdcGl1GHnjowNHVLlbknBwJNdA0XDVPnjECcuu6d"
client = udp_client.SimpleUDPClient("127.0.0.1", 9000)
message = "test Message"
image_count = 1
ohatweet = False

# 定型文（曜日/通常）
message_one = "One Test Message"
message_two = "Two Test Message"
message_three = "Three Test Message"
message_four = "Four Test Message"
message_five = "Five Test Message"
message_six = "Six Test Message"
message_seven = "Seven Test Message"


def SettingImageList():
    global image_count
    CSIDL_MYPICTURES = 0x27
    buf = ctypes.create_unicode_buffer(ctypes.wintypes.MAX_PATH)
    ctypes.windll.shell32.SHGetFolderPathW(0, CSIDL_MYPICTURES, 0, 0, buf)
    picture_folder = list(
        Path(buf.value + "/VRChat/" + datetime.now().strftime("%Y-%m")).glob(r"*.png")
    )
    picture_folder.sort(key=os.path.getctime, reverse=True)
    media_path_list = picture_folder[0 : int(image_count)]
    media_list = []
    Screen(0.25, 1)
    for x in media_path_list:
        img = api.media_upload(x.resolve())
        media_list += [img.media_id]
        print(x.resolve())
    return media_list


# ツイート


def TweetPost(message, media_list):
    global at, ats, user_at, user_ats
    client = tweepy.Client(
        consumer_key=at,
        consumer_secret=ats,
        access_token=decrypt(user_at, secret_key),
        access_token_secret=decrypt(user_ats, secret_key),
    )
    client.create_tweet(text=message, media_ids=media_list)
    Screen(0.5, 1)
    print("tweet media")


# OSC送信


def Screen(x, y):
    client.send_message("/avatar/parameters/ScreenX", x)
    client.send_message("/avatar/parameters/ScreenY", y)


# OSC受信ハンドラ


def Touch(unused_addr, args, touch_flag):
    if touch_flag:
        time.sleep(0.5)
        client.send_message("/avatar/parameters/Check", 1)
        print("check")
        Screen(0.25, 1.0)


def Check(unused_addr, args, touch_flag):
    global message, ohatweet
    global message_one
    global message_two
    global message_three
    global message_four
    global message_five
    global message_six
    global message_seven
    if touch_flag:
        print("tweet")
        client.send_message("/avatar/parameters/Check", 0)
        if ohatweet:
            weekday = datetime.now().weekday()
            if weekday == 0:
                msg = message_one
            elif weekday == 1:
                msg = message_two
            elif weekday == 2:
                msg = message_three
            elif weekday == 3:
                msg = message_four
            elif weekday == 4:
                msg = message_five
            elif weekday == 5:
                msg = message_six
            elif weekday == 6:
                msg = message_seven
            else:
                msg = message
        else:
            msg = message
        TweetPost(msg, SettingImageList())
        Screen(0.5, 1.0)


def TouchOne(unused_addr, args, touch_flag):
    global message
    print("touch one")
    if touch_flag:
        message = message_one


def TouchTwo(unused_addr, args, touch_flag):
    global message
    print("touch two")
    if touch_flag:
        message = message_two


def TouchThree(unused_addr, args, touch_flag):
    global message
    print("touch three")
    if touch_flag:
        message = message_three


def TouchFour(unused_addr, args, touch_flag):
    global message
    print("touch four")
    if touch_flag:
        message = message_four


def TouchFive(unused_addr, args, touch_flag):
    global message
    print("touch five")
    if touch_flag:
        message = message_five


def TouchSix(unused_addr, args, touch_flag):
    global message
    print("touch six")
    if touch_flag:
        message = message_six


def TouchSeven(unused_addr, args, touch_flag):
    global message
    print("touch seven")
    if touch_flag:
        message = message_seven


def start_osc_server():
    dispatcher = Dispatcher()
    dispatcher.map("/avatar/parameters/Touch", Touch, "TouchFlag")
    dispatcher.map("/avatar/parameters/TouchOne", TouchOne, "TouchFlag")
    dispatcher.map("/avatar/parameters/TouchTwo", TouchTwo, "TouchFlag")
    dispatcher.map("/avatar/parameters/TouchThree", TouchThree, "TouchFlag")
    dispatcher.map("/avatar/parameters/TouchFour", TouchFour, "TouchFlag")
    dispatcher.map("/avatar/parameters/TouchFive", TouchFive, "TouchFlag")
    dispatcher.map("/avatar/parameters/TouchSix", TouchSix, "TouchFlag")
    dispatcher.map("/avatar/parameters/TouchSeven", TouchSeven, "TouchFlag")
    dispatcher.map("/avatar/parameters/Enter", Check, "TouchFlag")
    server = osc_server.ThreadingOSCUDPServer(("127.0.0.1", 9001), dispatcher)
    server.serve_forever()


def save_config():
    print("file Save...")
    f = open(".token_config", "w")
    json.dump(
        [
            encrypt(user_at, secret_key),
            encrypt(user_ats, secret_key),
            image_count,
            ohatweet,
            message_one,
            message_two,
            message_three,
            message_four,
            message_five,
            message_six,
            message_seven,
        ],
        f,
    )


def main(page: ft.Page):
    global image_count
    global ohatweet
    global api
    global user_at
    global user_ats
    global secret_key
    global message_one
    global message_two
    global message_three
    global message_four
    global message_five
    global message_six
    global message_seven
    if Path(".token_config").exists():
        secret_key = page.client_storage.get("linkring.secret_key")
        with open(".token_config", "r") as f:
            config = json.load(f)
            # 設定ファイルから値を取得
            user_at = config[0]
            user_ats = config[1]
            image_count = config[2]
            ohatweet = config[3]
            message_one = config[4]
            message_two = config[5]
            message_three = config[6]
            message_four = config[7]
            message_five = config[8]
            message_six = config[9]
            message_seven = config[10]
        auth = tweepy.OAuth1UserHandler(
            at, ats, decrypt(user_at, secret_key), decrypt(user_ats, secret_key)
        )
        api = tweepy.API(auth)
        print("load success")
    else:
        oauth1_user_handler = tweepy.OAuth1UserHandler(at, ats, callback="oob")
        webbrowser.open(
            oauth1_user_handler.get_authorization_url(signin_with_twitter=True)
        )
        print("auth")
        pw = ft.TextField(
            label="Input Pin CODE", password=True, can_reveal_password=True
        )

        def auth(e):
            global api
            global auth
            global user_at
            global user_ats
            global image_count
            global ohatweet
            user_at, user_ats = oauth1_user_handler.get_access_token(pw.value)
            secret_key = secrets.token_hex(256)
            f = open(".token_config", "w")
            json.dump(
                [
                    encrypt(user_at, secret_key),
                    encrypt(user_ats, secret_key),
                    image_count,
                    ohatweet,
                    message_one,
                    message_two,
                    message_three,
                    message_four,
                    message_five,
                    message_six,
                    message_seven,
                ],
                f,
            )
            page.client_storage.set("linkring.secret_key", secret_key)
            auth = tweepy.OAuth1UserHandler(at, ats, user_at, user_ats)
            api = tweepy.API(auth)
            page.controls.pop(0)
            page.update()

        page.add(
            ft.Column(controls=[pw, ft.ElevatedButton(text="Enter", on_click=auth)])
        )

    page.title = "LinkRing"
    page.window.width = 350
    page.window.height = 500
    page.padding = 0
    page.fonts = {
        "Grandstander Regular": "https://fonts.gstatic.com/s/grandstander/v18/ga6fawtA-GpSsTWrnNHPCSIMZhhKpFjyNZIQD1--D3g.ttf"
    }

    # UI部品の初期化
    status_text = ft.Text(value="", color="green")

    # おはツイモード
    def on_ohatweet_change(e):
        global ohatweet
        ohatweet = e.control.value
        save_config()
        update_labels()
        page.update()

    ohatweet_switch = ft.Switch(
        label="おはツイモード", value=ohatweet, on_change=on_ohatweet_change
    )

    # 定型文編集欄
    t1 = ft.TextField(value=message_one, label="定型文1/月曜日")
    t2 = ft.TextField(value=message_two, label="定型文2/火曜日")
    t3 = ft.TextField(value=message_three, label="定型文3/水曜日")
    t4 = ft.TextField(value=message_four, label="定型文4/木曜日")
    t5 = ft.TextField(value=message_five, label="定型文5/金曜日")
    t6 = ft.TextField(value=message_six, label="定型文6/土曜日")
    t7 = ft.TextField(value=message_seven, label="定型文7/日曜日")

    def update_labels():
        if ohatweet:
            t1.label = "月曜日"
            t2.label = "火曜日"
            t3.label = "水曜日"
            t4.label = "木曜日"
            t5.label = "金曜日"
            t6.label = "土曜日"
            t7.label = "日曜日"
        else:
            t1.label = "定型文1"
            t2.label = "定型文2"
            t3.label = "定型文3"
            t4.label = "定型文4"
            t5.label = "定型文5"
            t6.label = "定型文6"
            t7.label = "定型文7"

    def on_template_save(e):
        global message_one, message_two, message_three, message_four, message_five, message_six, message_seven
        message_one = t1.value
        message_two = t2.value
        message_three = t3.value
        message_four = t4.value
        message_five = t5.value
        message_six = t6.value
        message_seven = t7.value
        status_text.value = "定型文を保存"
        save_config()
        page.update()

    # 画像枚数選択
    def on_image_count_change(e):
        global image_count
        image_count = int(e.control.value)
        status_text.value = f"投稿画像枚数: {image_count}"
        save_config()
        page.update()

    image_count_radio = ft.RadioGroup(
        content=ft.Row(
            [
                ft.Radio(value=1, label="1枚"),
                ft.Radio(value=2, label="2枚"),
                ft.Radio(value=3, label="3枚"),
                ft.Radio(value=4, label="4枚"),
            ]
        ),
        value=image_count,
        on_change=on_image_count_change,
    )

    # ツイートボタン
    def on_tweet_click(e):
        global message
        status_text.value = "ツイート中..."
        page.update()
        try:
            # おはツイモードなら曜日で切り替え
            if ohatweet:
                weekday = datetime.now().weekday()
                if weekday == 0:
                    msg = message_one
                elif weekday == 1:
                    msg = message_two
                elif weekday == 2:
                    msg = message_three
                elif weekday == 3:
                    msg = message_four
                elif weekday == 4:
                    msg = message_five
                elif weekday == 5:
                    msg = message_six
                elif weekday == 6:
                    msg = message_seven
                else:
                    msg = message
            else:
                msg = message
            TweetPost(msg, SettingImageList())
            status_text.value = "ツイート完了！"
        except Exception as ex:
            status_text.value = f"エラー: {ex}"
        page.update()

    update_labels()

    # レイアウト
    page.add(
        ft.Image(
            src="image_1.png",
        ),
        ft.Tabs(
            tabs=[
                ft.Tab(
                    text="ツイート定型文変更",
                    content=ft.Container(
                        content=ft.Column(
                            controls=[
                                ft.ElevatedButton(
                                    "定型文を保存",
                                    on_click=on_template_save,
                                ),
                                t1,
                                t2,
                                t3,
                                t4,
                                t5,
                                t6,
                                t7,
                                ft.Text("", height=10),
                            ],
                            scroll=ft.ScrollMode.ALWAYS,
                            expand=True,
                            spacing=15,
                        ),
                        alignment=ft.alignment.top_center,
                    ),
                ),
                ft.Tab(
                    text="設定",
                    content=ft.Container(
                        content=ft.Column(
                            [
                                ohatweet_switch,
                                ft.Text("投稿画像枚数"),
                                image_count_radio,
                                ft.ElevatedButton(
                                    "ツイート",
                                    on_click=on_tweet_click,
                                    bgcolor="#5CABEC",
                                    color="white",
                                ),
                            ]
                        ),
                    ),
                ),
                ft.Tab(tab_content=status_text),
            ],
            expand=True,
        ),
    )

    start_osc_server()


ft.app(target=main)
